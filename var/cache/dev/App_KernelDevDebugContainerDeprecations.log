a:8:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:100:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:95:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:100:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:88:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:100:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:88:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:100:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:88:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/http-kernel/Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:8192;s:7:"message";s:110:"Optional parameter $m declared before required parameter $stripe is implicitly treated as a required parameter";s:4:"file";s:89:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/src/Controller/CheckListController.php";s:4:"line";i:37;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:8192;s:7:"message";s:110:"Optional parameter $Y declared before required parameter $stripe is implicitly treated as a required parameter";s:4:"file";s:89:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/src/Controller/CheckListController.php";s:4:"line";i:37;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:105:"Since symfony/security-bundle 6.2: The "enable_authenticator_manager" option at "security" is deprecated.";s:4:"file";s:97:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:248;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:96:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:421;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:177:"The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger".";s:4:"file";s:100:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:108:"/Users/loic/Dev/symfony/bld_parfumee-api_hostinger/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}}